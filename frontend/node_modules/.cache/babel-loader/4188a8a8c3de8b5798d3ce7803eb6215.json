{"ast":null,"code":"class Api {\n  constructor(options) {\n    this._url = options.url;\n    this._headers = options.headers;\n  }\n\n  handleOriginalResponse(res) {\n    if (res.ok) {\n      return res.json();\n    }\n\n    return Promise.reject(`Ошибка: ${res.status}`);\n  }\n\n  getInitialCards() {\n    return fetch(`${this._url}cards`, {\n      headers: this._headers\n    }).then(res => this.handleOriginalResponse(res));\n  }\n\n  addCard(cardName, cardLink) {\n    return fetch(`${this._url}cards`, {\n      method: 'POST',\n      headers: this._headers,\n      body: JSON.stringify({\n        name: cardName,\n        link: cardLink\n      })\n    }).then(res => this.handleOriginalResponse(res));\n  }\n\n  deleteCard(cardId) {\n    return fetch(`${this._url}cards/${cardId}`, {\n      method: 'DELETE',\n      headers: this._headers\n    }).then(res => this.handleOriginalResponse(res));\n  }\n\n  getProfileData() {\n    return fetch(`${this._url}users/me`, {\n      headers: this._headers\n    }).then(res => this.handleOriginalResponse(res));\n  }\n\n  updateProfileData(newName, newAbout) {\n    return fetch(`${this._url}users/me`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        name: newName,\n        about: newAbout\n      })\n    }).then(res => this.handleOriginalResponse(res));\n  }\n\n  updateProfileAvatar(newAvatar) {\n    return fetch(`${this._url}users/me/avatar`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar: newAvatar\n      })\n    }).then(res => this.handleOriginalResponse(res));\n  }\n\n  setLike(cardId) {\n    return fetch(`${this._url}cards/likes/${cardId}`, {\n      method: 'PUT',\n      headers: this._headers\n    }).then(res => this.handleOriginalResponse(res));\n  }\n\n  removeLike(cardId) {\n    return fetch(`${this._url}cards/likes/${cardId}`, {\n      method: 'DELETE',\n      headers: this._headers\n    }).then(res => this.handleOriginalResponse(res));\n  }\n\n  changeLikeCardStatus(cardId, cardLiked) {\n    return fetch(`${this._url}cards/likes/${cardId}`, {\n      method: cardLiked ? 'DELETE' : 'PUT',\n      headers: this._headers\n    }).then(res => this.handleOriginalResponse(res));\n  }\n\n}\n\nconst api = new Api({\n  url: 'https://mesto.nomoreparties.co/v1/cohort-19/',\n  headers: {\n    authorization: '7ff747f4-57ba-4d6b-8671-46b7cc0f01d2',\n    'Content-type': 'application/json'\n  }\n});\nexport default api;","map":{"version":3,"sources":["/Users/liza/dev/react/react-mesto-auth/src/utils/api.js"],"names":["Api","constructor","options","_url","url","_headers","headers","handleOriginalResponse","res","ok","json","Promise","reject","status","getInitialCards","fetch","then","addCard","cardName","cardLink","method","body","JSON","stringify","name","link","deleteCard","cardId","getProfileData","updateProfileData","newName","newAbout","about","updateProfileAvatar","newAvatar","avatar","setLike","removeLike","changeLikeCardStatus","cardLiked","api","authorization"],"mappings":"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","sourcesContent":["class Api {\n  constructor(options) {\n    this._url = options.url;\n    this._headers = options.headers;\n  }\n\n  handleOriginalResponse (res) {\n    if (res.ok) {\n      return res.json();\n    }\n\n    return Promise.reject(`Ошибка: ${res.status}`);\n  }\n\n  getInitialCards() {\n    return fetch(`${this._url}cards`, {\n      headers: this._headers\n    })\n    .then(res => this.handleOriginalResponse(res));\n  }\n\n  addCard(cardName, cardLink) {\n    return fetch(`${this._url}cards`, {\n      method: 'POST',\n      headers: this._headers,\n      body: JSON.stringify({\n        name: cardName,\n        link: cardLink\n      })\n    })\n    .then(res => this.handleOriginalResponse(res));\n  }\n\n  deleteCard(cardId) {\n    return fetch(`${this._url}cards/${cardId}`, {\n      method: 'DELETE',\n      headers: this._headers,\n    })\n    .then(res => this.handleOriginalResponse(res));\n  }\n\n  getProfileData() {\n    return fetch(`${this._url}users/me`, {\n      headers: this._headers\n    })\n    .then(res => this.handleOriginalResponse(res));\n  }\n\n  updateProfileData(newName, newAbout) {\n    return fetch(`${this._url}users/me`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        name: newName,\n        about: newAbout\n      })\n    })\n    .then(res => this.handleOriginalResponse(res));\n  }\n\n  updateProfileAvatar(newAvatar) {\n    return fetch(`${this._url}users/me/avatar`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar: newAvatar\n      })\n    })\n    .then(res => this.handleOriginalResponse(res));\n  }\n\n  setLike(cardId) {\n    return fetch(`${this._url}cards/likes/${cardId}`, {\n      method: 'PUT',\n      headers: this._headers\n    })\n    .then(res => this.handleOriginalResponse(res));\n  }\n\n  removeLike(cardId) {\n    return fetch(`${this._url}cards/likes/${cardId}`, {\n      method: 'DELETE',\n      headers: this._headers\n    })\n    .then(res => this.handleOriginalResponse(res));\n  }\n\n  changeLikeCardStatus(cardId, cardLiked) {\n    return fetch(`${this._url}cards/likes/${cardId}`, {\n      method: cardLiked ? 'DELETE' : 'PUT',\n      headers: this._headers\n    })\n    .then(res => this.handleOriginalResponse(res));\n  }\n\n}\n\nconst api = new Api({\n  url: 'https://mesto.nomoreparties.co/v1/cohort-19/',\n  headers: {\n    authorization: '7ff747f4-57ba-4d6b-8671-46b7cc0f01d2',\n    'Content-type': 'application/json'\n  }\n});\n\nexport default api;\n"]},"metadata":{},"sourceType":"module"}