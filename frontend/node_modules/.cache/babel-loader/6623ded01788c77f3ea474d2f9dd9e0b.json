{"ast":null,"code":"export const BASE_URL = \"https://auth.nomoreparties.co\";\n\nconst responseCheck = response => response.ok ? response.json() : Promise.reject(`Ошибка ${response.status}`);\n\nexport const register = data => {\n  fetch(`${BASE_URL}/signup`, {\n    method: 'POST',\n    headers: {\n      authorization: '7ff747f4-57ba-4d6b-8671-46b7cc0f01d2',\n      \"Accept\": \"application.json\",\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      \"password\": data.password,\n      \"email\": data.email\n    })\n  }).then(res => responseCheck(res));\n};\nexport const login = ({\n  email,\n  password\n}) => {\n  return fetch(`${BASE_URL}/signin`, {\n    method: 'POST',\n    headers: {\n      authorization: '7ff747f4-57ba-4d6b-8671-46b7cc0f01d2',\n      \"Accept\": \"application.json\",\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      \"password\": password,\n      \"email\": email\n    })\n  }).then(res => responseCheck(res));\n};\nexport const getContent = token => {\n  return fetch(`${BASE_URL}/users/me`, {\n    method: 'GET',\n    headers: {\n      \"Accept\": \"application.json\",\n      \"Content-Type\": \"application/json\",\n      \"Authorization\": `Bearer ${token}`\n    }\n  }).then(res => responseCheck(res));\n};","map":{"version":3,"sources":["/Users/liza/dev/react/react-mesto-auth/src/components/Auth.js"],"names":["BASE_URL","responseCheck","response","ok","json","Promise","reject","status","register","data","fetch","method","headers","authorization","body","JSON","stringify","password","email","then","res","login","getContent","token"],"mappings":"AAAA,OAAO,MAAMA,QAAQ,GAAG,+BAAjB;;AAEP,MAAMC,aAAa,GAAIC,QAAD,IAAcA,QAAQ,CAACC,EAAT,GAAcD,QAAQ,CAACE,IAAT,EAAd,GAAgCC,OAAO,CAACC,MAAR,CAAgB,UAASJ,QAAQ,CAACK,MAAO,EAAzC,CAApE;;AAEA,OAAO,MAAMC,QAAQ,GAAIC,IAAD,IAAU;AAC9BC,EAAAA,KAAK,CAAE,GAAEV,QAAS,SAAb,EAAuB;AACxBW,IAAAA,MAAM,EAAE,MADgB;AAExBC,IAAAA,OAAO,EAAE;AACLC,MAAAA,aAAa,EAAE,sCADV;AAEL,gBAAU,kBAFL;AAGL,sBAAgB;AAHX,KAFe;AAOxBC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjB,kBAAYP,IAAI,CAACQ,QADA;AAEjB,eAASR,IAAI,CAACS;AAFG,KAAf;AAPkB,GAAvB,CAAL,CAYCC,IAZD,CAYMC,GAAG,IAAInB,aAAa,CAACmB,GAAD,CAZ1B;AAaH,CAdM;AAgBP,OAAO,MAAMC,KAAK,GAAG,CAAC;AAACH,EAAAA,KAAD;AAAQD,EAAAA;AAAR,CAAD,KAAuB;AACxC,SAAOP,KAAK,CAAE,GAAEV,QAAS,SAAb,EAAuB;AAC/BW,IAAAA,MAAM,EAAE,MADuB;AAE/BC,IAAAA,OAAO,EAAE;AACLC,MAAAA,aAAa,EAAE,sCADV;AAEL,gBAAU,kBAFL;AAGL,sBAAgB;AAHX,KAFsB;AAO/BC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjB,kBAAYC,QADK;AAEjB,eAASC;AAFQ,KAAf;AAPyB,GAAvB,CAAL,CAYNC,IAZM,CAYDC,GAAG,IAAInB,aAAa,CAACmB,GAAD,CAZnB,CAAP;AAaH,CAdM;AAgBP,OAAO,MAAME,UAAU,GAAIC,KAAD,IAAW;AACjC,SAAOb,KAAK,CAAE,GAAEV,QAAS,WAAb,EAAyB;AACjCW,IAAAA,MAAM,EAAE,KADyB;AAEjCC,IAAAA,OAAO,EAAE;AACL,gBAAU,kBADL;AAEL,sBAAgB,kBAFX;AAGL,uBAAkB,UAASW,KAAM;AAH5B;AAFwB,GAAzB,CAAL,CAQNJ,IARM,CAQDC,GAAG,IAAInB,aAAa,CAACmB,GAAD,CARnB,CAAP;AASH,CAVM","sourcesContent":["export const BASE_URL = \"https://auth.nomoreparties.co\";\n\nconst responseCheck = (response) => response.ok ? response.json() : Promise.reject(`Ошибка ${response.status}`);\n\nexport const register = (data) => {\n    fetch(`${BASE_URL}/signup`, {\n        method: 'POST',\n        headers: {\n            authorization: '7ff747f4-57ba-4d6b-8671-46b7cc0f01d2',\n            \"Accept\": \"application.json\",\n            \"Content-Type\": \"application/json\" \n        },\n        body: JSON.stringify({\n            \"password\": data.password,\n            \"email\": data.email\n        })\n    })\n    .then(res => responseCheck(res))\n}\n\nexport const login = ({email, password}) => {\n    return fetch(`${BASE_URL}/signin`, {\n        method: 'POST',\n        headers: {\n            authorization: '7ff747f4-57ba-4d6b-8671-46b7cc0f01d2',\n            \"Accept\": \"application.json\",\n            \"Content-Type\": \"application/json\" \n        },\n        body: JSON.stringify({\n            \"password\": password,\n            \"email\": email\n        })\n    })\n    .then(res => responseCheck(res))\n}\n\nexport const getContent = (token) => {\n    return fetch(`${BASE_URL}/users/me`, {\n        method: 'GET',\n        headers: {\n            \"Accept\": \"application.json\",\n            \"Content-Type\": \"application/json\",\n            \"Authorization\": `Bearer ${token}`\n        }\n    })\n    .then(res => responseCheck(res))\n}\n"]},"metadata":{},"sourceType":"module"}